[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "orbit-nrel"
dynamic = ["version"]  # TODO
authors = [
  {name = "Nick Riccobono", email = "nicholas.riccobono@nrel.gov"},
  {name = "Rob Hammond", email = "rob.hammond@nrel.gov"},
  {name = "Jake Nunemaker", email = "jacob.nunemaker@nrel.gov"},
]
readme = {file = "README.rst", content-type = "text/x-rst"}
description = "Offshore Renewables Balance of system and Installation Tool"
requires-python = ">=3.9, <3.11"
license = {file = "LICENSE"}
dependencies = [
  "numpy",
  "matplotlib",
  "simpy",
  "marmot-agents>=0.2.5",
  "scipy",
  "pandas",
  "pyyaml",
  "openmdao>=3.2",
  "python-benedict<0.33.2",
  "statsmodels",
]
keywords = [
  "python3",
  "wind-energy",
  "balance-of-system",
  "wind-installation",
  "discrete-event-simulation",
  "simulation",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Other Audience",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
source = "https://github.com/WISDEM/ORBIT"
documentation = "https://wisdem.github.io/ORBIT/"
issues = "https://github.com/WISDEM/ORBIT/issues"
changelog = "https://github.com/WISDEM/ORBIT/blob/main/docs/source/changelog.rst"  # TODO

[project.optional-dependencies]
dev = [
  "pre-commit",
  "pylint",
  "flake8",
  "Flake8-pyproject",
  "black",
  "isort",
  "pytest",
  "pytest-cov",
  "sphinx",
  "sphinx-rtd-theme",
]

[tool.black]
line-length = 79
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 79
sections = [
  "FUTURE",
  "STDLIB",
  "THIRDPARTY",
  "FIRSTPARTY",
  "LOCALFOLDER",
]
known_first_party = [
  "ORBIT",
  "tests",
  "library"
]
length_sort = 1

[tool.flake8]
ignore = [
  "E731",
  "E402",
  "F",
  "W504",
  "W503",
]
exclude = [
  ".git",
  "__pycache__",
  "docs/source/conf.py",
  "old",
  "build",
  "dist",
  "^tests/",
]
max-complexity = 10
max-line-length=79

[tool.pylint.main]
ignore = ["CVS"]
jobs = 4
persistent = true
suggestion-mode = true

[tool.pylint.basic]
argument-naming-style = "snake_case"
attr-naming-style = "snake_case"
bad-names = ["foo", "bar", "baz", "toto", "tutu", "tata"]
class-const-naming-style = "UPPER_CASE"
class-naming-style = "PascalCase"
const-naming-style = "UPPER_CASE"
docstring-min-length = -1
good-names = ["i", "j", "k", "ex", "Run", "_"]
inlinevar-naming-style = "any"
method-naming-style = "snake_case"
module-naming-style = "snake_case"
no-docstring-rgx = "^_"
property-classes = ["abc.abstractproperty"]
variable-naming-style = "snake_case"
defining-attr-methods = ["__init__", "__new__", "setUp"]
exclude-protected = ["_asdict", "_fields", "_replace", "_source", "_make"]
valid-classmethod-first-arg = ["cls"]
valid-metaclass-classmethod-first-arg = ["mcs"]
